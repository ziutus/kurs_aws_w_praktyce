AWSTemplateFormatVersion: 2010-09-09
Description: Base Network configuration for first Availablity Zone

Parameters:
  Project:
    Description: Project name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,20}$
  Component:
    Description: Name of the component
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  Stage:
    Description: Stage name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$

  # Data taken from Parameters Storage
  VpcId:
    Description: Reference of the VpcId from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  PublicSubnetACidr:
    Description: Public Subnet A CIDR
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Type: String
  PrivateSubnetACidr:
    Description: Subnet A Cidr
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Type: String
  DataSubnetACidr:
    Description: Data Subnet A CIDR
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Type: String
  PublicRouteTableId:
    Description: Reference of the VpcId from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  
Resources:
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0 , !GetAZs '' ]
      VpcId: !Ref VpcId
      CidrBlock: !Ref PublicSubnetACidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-public-subnet-a

  PublicSubnetAParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: !Sub Stores ${Project}-${Stage}-${Component} Public Subnet in AZ A
      Tier: Standard
      Name: !Sub /${Project}/${Stage}/${Component}/public-subnet-a/subnet-id
      Value: !Ref PublicSubnetA
      Tags:
        Name: !Sub ${Project}-${Stage}-${Component}-public-subnet-a-subnet-id

  PublicSubnetARouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref PublicRouteTableId
        SubnetId: !Ref PublicSubnetA

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0 , !GetAZs '' ]
      VpcId: !Ref VpcId
      CidrBlock: !Ref PrivateSubnetACidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-private-subnet-a

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-private-a-route-name

  PrivateRouteTableAIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: !Sub Stores ${Project}-${Stage}-${Component} Private Route Table A ID
      Tier: Standard
      Name: !Sub /${Project}/${Stage}/${Component}/private-route-table-a/rt-id
      Value: !Ref PrivateRouteTableA
      Tags:
        Name: !Sub ${Project}-${Stage}-${Component}-private-route-table-a-id

  PrivateRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      SubnetId: !Ref PrivateSubnetA

  DataSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '' ]
      VpcId: !Ref VpcId
      CidrBlock: !Ref DataSubnetACidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-data-subnet-a

  DataRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-data-route-table-a

  DataRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DataRouteTableA
      SubnetId: !Ref DataSubnetA

# Outputs:
