AWSTemplateFormatVersion: 2010-09-09
Description: Put here your description

Parameters:
  Project:
    Description: Project name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,20}$
  Component:
    Description: Name of the component
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  Stage:
    Description: Stage name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  ImageId:
    Description: Id of the AMI with Application
    Type: AWS::EC2::Image::Id
  InstanceType:
    Description: Type of instance
    Type: String
    Default: t2.micro
  InstanceRole:
    Description: Name of the instance role
    Type: AWS::SSM::Parameter::Value<String>
  ApplicationSecurityGroup:
    Description: ID of the Application Security Group
    Type: AWS::SSM::Parameter::Value<String>
  S3ConfigurationBucket:
    Description: Name of the configuration bucket
    Type: AWS::SSM::Parameter::Value<String>
  CloudWatchConfigFile:
    Description: CloudWatch Config file
    Type: String
  ServiceConfigFile:
    Description: Service configuration file name
    Type: String
  ServiceName:
    Description: Service Name
    Type: String



Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
     

  ApplicationLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Arn: !GetAtt  InstanceProfile.Arn
        SecurityGroups:
          - !Ref ApplicationSecurityGroup
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub ${Project}-${Stage}-${Component}-application-instance
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            aws s3 cp s3://${S3ConfigurationBucket}/cloudwatch/${CloudWatchConfigFile} /opt/aws/amazon-cloudwatch-agent/etc/${CloudWatchConfigFile}
            sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/${CloudWatchConfigFile} -s
            aws s3 cp s3://${S3ConfigurationBucket}/service/${ServiceConfigFile} /etc/${ServiceConfigFile}
            sudo systemctl start ${ServiceName}

  ApplicationLaunchTemplateParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: !Sub Stores ${Project}-${Stage}-${Component} Application Launch Template Id
      Tier: Standard
      Name: !Sub /${Project}/${Stage}/${Component}/application-launch-template/id
      Value: !Ref ApplicationLaunchTemplate
      Tags:
        Name: !Sub ${Project}-${Stage}-${Component}-application-launch-template-id-param

  ApplicationLaunchTemplateLatestVersionParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: !Sub Stores ${Project}-${Stage}-${Component} Application Launch Template Latest Version No.
      Tier: Standard
      Name: !Sub /${Project}/${Stage}/${Component}/application-launch-template/latest-version
      Value: !GetAtt ApplicationLaunchTemplate.LatestVersionNumber
      Tags:
        Name: !Sub ${Project}-${Stage}-${Component}-application-launch-template-latest-version-param

  
Outputs:
  ApplicationLaunchTemplateId:
    Description: The ID of the Application Launch Template
    Value: !Ref ApplicationLaunchTemplate
  ApplicationLaunchTemplateIdParamName:
    Description: The name of the SSM parameter where the Id of the Application Launch Template is stored
    Value: !Ref ApplicationLaunchTemplateParam
  ApplicationLaunchTemplateLatestVersionParamName:
    Description: The name of the SSM parameter where the latest version of the Application Launch Template is stored
    Value: !Ref ApplicationLaunchTemplateLatestVersionParam


